{"version":3,"sources":["components/Home.js","components/SignUp.js","components/Manager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","style","backgroundColor","Component","SignUp","props","create","create2","state","radio","name","number","placeholder","maxLength","onChange","v","setState","target","value","type","id","for","onClick","this","Manager","workers","map","e","i","Login","show","flag","Products","forklift","products","updateBtn","forkNo","filter","ind","LoginBtn","l","logNum","alert","inplace","App","create3","rad","na","num","Workers","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec437fae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='a3'>\r\n                <h3>Home Page:</h3>\r\n               <Link to='/SignUp'><button style={{backgroundColor:'red'}} className='btn1'>SignUp</button></Link><br/><br/>\r\n               <Link to='/Login'><button style={{backgroundColor:'yellow'}} className='btn1' >Login</button></Link><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            radio:'',\r\n            name:'',\r\n            number:''\r\n        }\r\n    }\r\n    create=()=>{\r\n        this.props.create2(this.state.radio,this.state.name,this.state.number)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='a1'>\r\n                <h3>Sign Up:</h3>\r\n                <input placeholder='Number' maxLength=\"5\"\r\n                onChange={(v)=>{this.setState({number:v.target.value})}}/><br/>\r\n                <input placeholder='Name' maxLength=\"5\"\r\n                onChange={(v)=>{this.setState({name:v.target.value})}}/><br/>\r\n                <p>Forklift truck</p>\r\n                <input type='radio' id='Yes' name='forklift' onChange={()=>{this.setState({radio:'Yes'})}}/>\r\n                <label for=\"Yes\">Yes</label>\r\n                <input type='radio' id='No' name='forklift' onChange={()=>{this.setState({radio:'No'})}}/>\r\n                <label for=\"No\">No</label><br/>\r\n                <br/> <Link to='/Login'><button style={{backgroundColor:'blue'}} onClick={this.create}>Sign-In</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Manager extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              {this.props.workers.map((e,i)=>{\r\n                  return(<div>\r\n                <h3>No:{e.number}</h3>\r\n                <h3>Name:{e.name}</h3>\r\n                <h3>Counter:</h3>\r\n                <h3>products:</h3>\r\n                  </div>)\r\n              })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import {Link} from 'react-router-dom';\r\nimport Manager from './Manager.js'\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            flag:1, \r\n            inplace:false,\r\n            logNum:[],\r\n            Products:[{number:'35354',name:'BlackBox',forklift:'No'},\r\n                      {number:'64389',name:'redBox',forklift:'Yes'},\r\n                      {number:'75264',name:'blueBox',forklift:'No'},\r\n                      {number:'45526',name:'WhiteBox',forklift:'Yes'}]\r\n        }\r\n    }\r\n    show=()=>{\r\n        if (this.state.flag == 2) {\r\n        return (<div>\r\n              {this.props.workers.map((e)=>{\r\n                     return(<div>\r\n                        <h3>Welcome: {e.name}</h3>\r\n                        <p>Number:{e.number}</p>\r\n                        <p>Name:{e.name}</p>\r\n                        <p>ForkLift License:{e.radio}</p>\r\n                        ------------------------\r\n                        <h3>List of Boxes:</h3>\r\n                     </div>)\r\n                })}\r\n                {this.state.Products.map((e)=>{\r\n                    return(<div> \r\n                        <h4>Name-{e.name}</h4>\r\n                        <h4>Number-{e.number}</h4>\r\n                        <h4>forklift needed-{e.forklift}</h4>\r\n                        {/* <button onClick={this.updateBtn}>Update</button> */}\r\n                        --------------------------------------\r\n                    </div>)\r\n                })}\r\n        </div>)\r\n        }\r\n        else if (this.state.flag == 3) {\r\n            return(<Manager workers={this.props.workers} products={this.props.Products}/>)\r\n        }\r\n    }\r\n    updateBtn=(i,e)=>{ \r\n    let forkNo=this.state.Products.filter((e,ind)=>(e.forklift !='No')) ;\r\n    this.setState({Products:[...forkNo]})\r\n   \r\n    }\r\n    LoginBtn=(l)=>{  \r\n        if (this.state.logNum == '99999') {\r\n            this.setState({flag:3})\r\n         }\r\n        \r\n         {this.props.workers.map((e,i)=>{\r\n          if (e.number[i] == this.state.logNum[i]) {\r\n            // this.setState({logNum:[...this.state.logNum,{log:l}]})\r\n            this.setState({flag:2})\r\n          }\r\n            else{\r\n                {alert('Worker doesnt exist')}\r\n            }\r\n         })}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='a2'>\r\n                <h3>Login:</h3>\r\n                <input placeholder='Number' maxLength=\"5\" \r\n                onChange={(v)=>{this.setState({logNum:v.target.value})}}/><br/><br/>\r\n                <button style={{backgroundColor:'blue'}} onClick={this.LoginBtn}>Login</button><br/><br/>\r\n                {this.show()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Home from './components/Home.js';\nimport SignUp from './components/SignUp.js';\nimport Login from './components/Login.js';\nexport default class App extends Component {\n constructor(props) {\n   super(props)\n \n   this.state = {\n    Workers:[],\n   }\n }\n \n  create3=(rad,na,num,l)=>{\n     this.setState({Workers:[...this.state.Workers,{name:na,number:num,radio:rad,logNum:[]}]})\n  }\n  render() {\n    return (\n      <div className='App'>\n        <Router>\n          <h2>Logistic Management!!</h2>\n          <Link to='/'><button style={{backgroundColor:'green'}} className='btn1'>HomePage</button></Link>\n          <Switch>\n            {this.state.Workers.map((e)=>{\n             return(<Route exact path='/Login' component={()=>{return <Login workers={this.state.Workers}/>}}/>)\n            })}\n          <Route exact path='/' component={()=>{return <Home/>}}/>\n          <Route exact path='/SignUp' component={()=>{return <SignUp create2={this.create3}/>}}/>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}